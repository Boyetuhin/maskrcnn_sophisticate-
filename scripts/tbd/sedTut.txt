
##sed @ delimiter: Substitute /opt/omni/lbin to /opt/tools/bin

sed 's@/opt/omni/lbin@/opt/tools/bin@g' path.txt
sed 's/\/opt\/omni\/lbin/\/opt\/tools\/bin/g' path.txt

##sed & Usage: Substitute /usr/bin/ to /usr/bin/local
sed 's@/usr/bin@&/local@g' path.txt

##sed & Usage: Match the whole line
sed 's@^.*$@<<<&>>>@g' path.txt

In the above example regexp has .^.*$. which matches the whole line.
Replacement part <<<&>>> writes the whole line with <<< and >>> in the
beginning and end of the line respectively.

III. Grouping and Back-references in Sed
Grouping can be used in sed like normal regular expression. A group is opened
with .\(. and closed with .\)..Grouping can be used in combination with
back-referencing.

Back-reference is the re-use of a part of a Regular Expression selected by
grouping. Back-references in sed can be used in both a Regular Expression and
in the replacement part of the substitute command.

Example 1: Get only the first path in each line
##:
 sed 's/\(\/[^:]*\).*/\1/g' path.txt

In the file path.txt change the order of field in the last line of the file.

sed '$s@\([^:]*\):\([^:]*\):\([^:]*\)@\3:\2:\1@g' path.txt

Get the list of usernames in /etc/passwd file
This sed example displays only the first field from the /etc/passwd file.

sed 's/\([^:]*\).*/\1/' /etc/passwd

Parenthesize first character of each word

echo "Welcome To The Geek Stuff" | sed 's/\([A-Z]\)/\(\1\)/g'

Commify the simple number.
sed 's/\(^\|[^0-9.]\)\([0-9]\+\)\([0-9]\{3\}\)/\1\2,\3/g' numbers

Substitute Only 2nd Occurrence of a Word Using sed s//2
sed 's/Linux/Linux-Unix/g' thegeekstuff.txt
sed 's/Linux/Linux-Unix/1' thegeekstuff.txt
sed 's/Linux/Linux-Unix/2' thegeekstuff.txt

Write Changes to a File and Print the Changes Using sed s//gpw
sed -n 's/Linux/Linux-Unix/gpw output' thegeekstuff.txt


Delete Last X Number of Characters From Each Line Using sed
This sed example deletes last 3 characters from each line.

sed 's/...$//' thegeekstuff.txt


Eliminate Comments and Empty Lines Using sed
In this example, there are two commands seperated by .;.
1. First command replaces the lines starting with the # to the blank lines 
2. :qSecond command deletes the empty lines. 



sed 's/Linux/Linux-Unix/3' thegeekstuff.txt



